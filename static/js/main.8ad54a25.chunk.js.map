{"version":3,"sources":["components/search-panel/index.js","components/search-panel/search-panel.js","services/pokService.js","components/pokemon-type-filter/index.js","components/pokemon-type-filter/pokemon-type-filter.js","components/spinner/index.js","components/spinner/spinner.js","components/error-loading/index.js","components/error-loading/error-loading.js","components/pokemon-list-item/index.js","components/pokemon-list-item/pokemon-list-item.js","components/pokemon-list/index.js","components/pokemon-list/pokemon-list.js","components/pokemon-info-base/index.js","components/pokemon-info-base/pokemon-info-base.js","components/pokemon-stats/index.js","components/pokemon-stats/pokemon-stats.js","components/pokemon-info/pokemon-info.js","components/pokemon-info/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","className","type","placeholder","onChange","Component","PokService","_apiBase","url","a","fetch","res","ok","Error","status","json","id","getResource","_transformPokemon","data","allPokemons1","then","response","allPokemons","i","results","length","fetchPokemonData","currentPokemon","push","pokemon","currentType","_transformType","imageSrc","sprites","other","front_default","name","types","species","height","weight","abilities","stats","PokemonTypeFilter","buttons","loading","pokService","onTypesLoaded","getTypes","onFilterSelect","Dropdown","Item","onClick","href","concat","map","transformFilter","toUpperCase","slice","filter","Toggle","variant","Menu","Spinner","ErrorLoading","PokemonListItem","src","width","alt","PokemonList","pokemons","error","minIndex","maxIndex","onPokemonLoaded","onError","err","onClickNext","onClickPrev","getAllPokemons","catch","prevProps","updateTerm","updateFilter","onClickPokemon","errorLoading","spinner","visiblePokemons","item","isFilterType","isFilterSearch","indexOf","toLowerCase","forEach","pokemonProps","content","PokemonBaseInfo","transformSpecies","components","is_hidden","ability","slot","currentTypes","disabled","PokemonStats","maxStat","base_stat","pokemonStats","stat","transformStatName","role","style","aria-valuenow","aria-valuemin","aria-valuemax","PokemonInfo","updateInfo","pokemonId","getPokemon","View","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+bACeA,E,kDCIX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,IAGV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBANP,E,kDASnB,SAAeC,GACX,IAAMH,EAAOG,EAAEC,OAAOC,MACtBC,KAAKC,SAAS,CAACP,SACfM,KAAKR,MAAMG,eAAeD,K,oBAG9B,WACI,OACI,uBACIQ,UAAU,4BACVC,KAAK,OACLC,YAAY,oBACZC,SAAUL,KAAKL,qB,GAtBUW,a,gCCJpBC,E,WACjB,aAAe,oBACXP,KAAKQ,SAAW,4B,sFAGpB,WAAkBC,GAAlB,eAAAC,EAAA,sEACsBC,MAAM,GAAD,OAAIX,KAAKQ,UAAT,OAAoBC,IAD/C,WACUG,EADV,QAGYC,GAHZ,sBAIc,IAAIC,MAAJ,0BAA6BL,EAA7B,qBAA6CG,EAAIG,SAJ/D,uBAOiBH,EAAII,OAPrB,wF,sHAUA,WAAiBC,GAAjB,eAAAP,EAAA,sEACsBV,KAAKkB,YAAL,mBAA6BD,IADnD,cACUL,EADV,yBAEWZ,KAAKmB,kBAAkBP,IAFlC,gD,0HAKA,kCAAAF,EAAA,6DACUU,EAAO,GACTC,EAAe,GAFvB,SAGUV,MAAM,gDACPW,MAAK,SAAAC,GAAQ,OAAIA,EAASP,UAC1BM,MAAK,SAAAE,GACFH,EAAeG,KAN3B,OASaC,EAAI,EATjB,YASoBA,EAAIJ,EAAaK,QAAQC,QAT7C,iCAUmC3B,KAAK4B,iBAAiBP,EAAaK,QAAQD,IAV9E,QAUYI,EAVZ,QAW6BZ,IACjBG,EAAKU,KAAKD,GAZtB,QASqDJ,IATrD,gDAeWL,GAfX,iD,2HAkBA,WAAuBW,GAAvB,iBAAArB,EAAA,6DACQD,EAAMsB,EAAQtB,IADtB,SAEuBE,MAAMF,GACpBa,MAAK,SAAAC,GACF,OAAIA,EAASV,GACFU,EAASP,OAET,QAPvB,cAEUJ,EAFV,yBAUWZ,KAAKmB,kBAAkBP,IAVlC,gD,oHAaA,kCAAAF,EAAA,6DACUU,EAAO,GADjB,SAEsBpB,KAAKkB,YAAY,SAFvC,OAGI,IADMN,EAFV,OAGaa,EAAI,EAAGA,EAAIb,EAAIc,QAAQC,OAAQF,IAChCO,EAAchC,KAAKiC,eAAerB,EAAIc,QAAQD,IAClDL,EAAKU,KAAKE,GALlB,yBAOWZ,GAPX,gD,qFAUA,SAAkBW,GACd,OAAgB,OAAZA,EACO,GAEJ,CACHd,GAAIc,EAAQd,GACZiB,SAAUH,EAAQI,QAAQC,MAAM,oBAAoBC,cACpDC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,QAAST,EAAQS,QAAQF,KACzBG,OAAQV,EAAQU,OAChBC,OAAQX,EAAQW,OAChBC,UAAWZ,EAAQY,UACnBC,MAAOb,EAAQa,S,4BAIvB,SAAezC,GACX,MAAO,CACHmC,KAAMnC,EAAKmC,U,KC/ERO,G,kNCOXpD,MAAQ,CACJqD,QAAS,GACTC,SAAS,G,EAEbC,WAAa,IAAIzC,E,EAEjB0C,cAAgB,SAACV,GACb,EAAKtC,SAAS,CACV6C,QAASP,EACTQ,SAAS,K,uDAIjB,WACI/C,KAAKgD,WAAWE,WACP5B,KAAKtB,KAAKiD,iB,oBAGvB,WACI,IAAIH,EAAU,GACPK,EAAkBnD,KAAKR,MAAvB2D,eAC2B,IAA9BnD,KAAKP,MAAMqD,QAAQnB,OACnBmB,EAAQhB,KACJ,cAACsB,EAAA,EAASC,KAAV,CAEIC,QAAS,kBAAMH,EAAe,QAC9BI,KAAK,IAHT,gBACQ,SAKZT,EAAQhB,KACJ,cAACsB,EAAA,EAASC,KAAV,CAEIC,QAAS,kBAAMH,EAAe,QAC9BI,KAAK,IAHT,gBACQ,QAIZT,EAAUA,EAAQU,OAAOxD,KAAKP,MAAMqD,QAAQW,KAAI,SAAAnB,GAC5C,IAAIoB,EAAkBpB,EAAKA,KAAK,GAAGqB,cAAgBrB,EAAKA,KAAKsB,MAAM,GACnE,OACI,cAACR,EAAA,EAASC,KAAV,CAEIC,QAAS,kBAAMH,EAAeb,EAAKA,OACnCiB,KAAK,IAHT,SAGcG,GAFLpB,EAAKA,WAM1B,IAAIoB,EAAkB1D,KAAKR,MAAMqE,OAAO,GAAGF,cAAgB3D,KAAKR,MAAMqE,OAAOD,MAAM,GAEnF,OACI,eAACR,EAAA,EAAD,WACI,cAACA,EAAA,EAASU,OAAV,CAAiBC,QAAQ,UAAU9C,GAAG,iBAAtC,SACKyC,IAGL,cAACN,EAAA,EAASY,KAAV,UACKlB,W,GAxD0BxC,c,gBCLhC2D,G,MCEC,WACZ,OACI,qBAAK/D,UAAU,qCAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,iCCNhKgE,ECCM,WACjB,OAAO,yDCFIC,G,kKCGX,WAAU,IAAD,EACoBnE,KAAKR,MAAvB0C,EADF,EACEA,SAAUI,EADZ,EACYA,KACjB,OACI,qCACI,qBAAK8B,IAAKlC,EAAUmC,MAAM,QAAQC,IAAI,YACtC,6BAAKhC,W,GANwBhC,cCF9BiE,G,wDCQX,WAAY/E,GAAQ,IAAD,8BACf,cAAMA,IAMVwD,WAAa,IAAIzC,EAPE,EAQnBd,MAAQ,CACJ+E,SAAU,GACVzB,SAAS,EACT0B,OAAO,EACPC,SAAU,EACVC,SAAU,EACVjF,KAAM,GACNmE,OAAQ,OAfO,EAkBnBe,gBAAkB,SAACJ,GACf,EAAKvE,SAAS,CACVuE,SAAUA,EACVzB,SAAS,KArBE,EAkEnB8B,QAAU,SAACC,GACP,EAAK7E,SAAS,CACVwE,OAAO,EACP1B,SAAS,KAlEb,EAAKgC,YAAc,EAAKA,YAAYnF,KAAjB,gBACnB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBAJJ,E,qDAyBnB,WACII,KAAKgD,WAAWiC,iBACP3D,KAAKtB,KAAK4E,iBACVM,MAAMlF,KAAK6E,W,gCAGxB,SAAmBM,GACXnF,KAAKR,MAAME,OAASyF,EAAUzF,MAC9BM,KAAKoF,aAELpF,KAAKR,MAAMqE,SAAWsB,EAAUtB,QAChC7D,KAAKqF,iB,+DAIb,4BAAA3E,EAAA,yDACWhB,EAAQM,KAAKR,MAAbE,KADX,iEAMUM,KAAKC,SAAS,CAChBP,OACAgF,SAAU,EACVC,SAAU,IATlB,gD,uHAaA,4BAAAjE,EAAA,yDACWmD,EAAU7D,KAAKR,MAAfqE,OADX,iEAMU7D,KAAKC,SAAS,CAChB4D,SACAa,SAAU,EACVC,SAAU,IATlB,gD,+EAoBA,WAAe,IAAD,EAC6B3E,KAAKP,MAArC+E,EADG,EACHA,SAAUG,EADP,EACOA,SAAUD,EADjB,EACiBA,SACvBC,GAAYH,EAAS7C,QAGzB3B,KAAKC,SAAS,CACV0E,SAAUA,EAAW,GACrBD,SAAUA,EAAW,O,yBAI7B,WAAe,IAAD,EACmB1E,KAAKP,MAA3BkF,EADG,EACHA,SAAUD,EADP,EACOA,SACA,IAAbA,GAGJ1E,KAAKC,SAAS,CACV0E,SAAUA,EAAW,GACrBD,SAAUA,EAAW,O,oBAI7B,WAAU,IAAD,EACkD1E,KAAKP,MAArD+E,EADF,EACEA,SAAUzB,EADZ,EACYA,QAAS0B,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,SAAUC,EADtC,EACsCA,SADtC,EAEkC3E,KAAKR,MAArC8F,EAFF,EAEEA,eAAgBzB,EAFlB,EAEkBA,OAAQnE,EAF1B,EAE0BA,KAEzB6F,EAAed,EAAQ,cAAC,EAAD,IAAkB,KACzCe,EAAUzC,EAAU,cAAC,EAAD,IAAa,KAEnC0C,EAAkB,GACE,IAApBjB,EAAS7C,SACT8D,EAAkBjB,EAASX,QAAO,SAAA6B,GAC9B,IAAIC,GAAe,EACfC,GAAiB,EASrB,OARIF,EAAKpD,KAAKuD,QAAQnG,EAAKoG,gBAAkB,IACzCF,GAAiB,GAErBF,EAAKnD,MAAMwD,SAAQ,SAAA5F,GACXA,EAAKA,KAAKmC,OAASuB,GAAqB,QAAXA,IAC7B8B,GAAe,MAGhBA,GAAgBC,KACxBhC,MAAMc,EAAUC,EAAW,GAAGlB,KAAI,SAACiC,GAAU,IACrCzE,EAAuByE,EAAvBzE,GAAO+E,EAD6B,YACbN,EADa,QAE3C,OACI,oBAAapC,QAAS,kBAAMgC,EAAerE,IAAKf,UAAU,iCAA1D,SACI,cAAC,EAAD,eAAqB8F,KADhB/E,OAMrB,IAAMgF,EAAYlD,GAAW0B,EAA2B,KAAlBgB,EAEtC,OACI,gCACI,qBAAIvF,UAAU,yBAAd,UACKqF,EACAC,EACAS,KAEL,sBAAK/F,UAAU,2CAAf,UACI,wBAAQC,KAAK,SAASmD,QAAStD,KAAKgF,YAAa9E,UAAU,gCAA3D,sBACA,wBAAQC,KAAK,SAASmD,QAAStD,KAAK+E,YAAa7E,UAAU,gCAA3D,4B,GAzIqBI,cCP1B4F,G,kKCIX,WAAU,IAAD,EACmDlG,KAAKR,MAAMuC,QAA5Dd,EADF,EACEA,GAAIsB,EADN,EACMA,MAAOC,EADb,EACaA,QAASC,EADtB,EACsBA,OAAQC,EAD9B,EAC8BA,OAAQC,EADtC,EACsCA,UACvCwD,EAAmB3D,EAAQ,GAAGmB,cAAgBnB,EAAQoB,MAAM,GAE1DwC,EAAazD,EAAUc,KAAI,SAAAiC,GAC7B,OAAKA,EAAKW,UAQF,qBAAoBnG,UAAU,kBAA9B,UACKwF,EAAKY,QAAQhE,KADlB,cAASoD,EAAKa,MANd,qBAAoBrG,UAAU,kBAA9B,UACKwF,EAAKa,KADV,KACkBb,EAAKY,QAAQhE,OADtBoD,EAAKa,SAapBC,EAAejE,EAAMkB,KAAI,SAACiC,EAAMjE,GAClC,OACI,wBAAgBtB,KAAK,SAASD,UAAU,yBAAyBuG,UAAQ,EAAzE,SACKf,EAAKvF,KAAKmC,KAAKqB,eADPlC,MAMrB,OACI,sBAAKvB,UAAU,kBAAf,UACI,oBAAIA,UAAU,uBAAd,0BACA,qBAAIA,UAAU,0CAAd,UACI,qBAAIA,UAAU,iDAAd,UACI,sBAAMA,UAAU,OAAhB,6BACA,sBAAMA,UAAU,YAAhB,SAA6Be,OAEjC,qBAAIf,UAAU,iDAAd,UACI,sBAAMA,UAAU,OAAhB,kBACA,+BAAOsG,OAEX,qBAAItG,UAAU,iDAAd,UACI,sBAAMA,UAAU,OAAhB,qBACA,iCAAOiG,EAAP,iBAEJ,qBAAIjG,UAAU,iDAAd,UACI,sBAAMA,UAAU,OAAhB,oBACA,iCAAOuC,EAAS,GAAhB,WAEJ,qBAAIvC,UAAU,iDAAd,UACI,sBAAMA,UAAU,OAAhB,oBACA,iCAAOwC,EAAS,GAAhB,YAEJ,qBAAIxC,UAAU,iDAAd,UACI,sBAAMA,UAAU,OAAhB,uBACA,oBAAIA,UAAU,6CAAd,SAA4DkG,iB,GAxDvC9F,cCF9BoG,G,kKCGX,WAGI,IAHM,IACC9D,EAAS5C,KAAKR,MAAdoD,MACH+D,EAAU/D,EAAM,GAAGgE,UACdnF,EAAI,EAAGA,EAAImB,EAAMjB,OAAQF,IAC1BkF,EAAU/D,EAAMnB,GAAGmF,YACnBD,EAAU/D,EAAMnB,GAAGmF,WAK3B,IAAMC,EAAejE,EAAMa,KAAI,SAACiC,EAAMjE,GAAO,IAClCqF,EAAmBpB,EAAnBoB,KAAMF,EAAalB,EAAbkB,UACTG,EAAoBD,EAAKxE,KAAK,GAAGqB,cAAgBmD,EAAKxE,KAAKsB,MAAM,GACjE1D,EAAY,eAOhB,OALIA,GADAyG,IAAYC,EACC,cAEA,cAIb,qBAAY1G,UAAU,gDAAtB,UACI,sBAAKA,UAAU,OAAf,UACI,uBAAMA,UAAU,WAAhB,UAA4B6G,EAA5B,OACA,sBAAM7G,UAAU,aAAhB,SAA8B0G,OAElC,qBAAK1G,UAAU,wBAAf,SACI,qBAAKA,UAAWA,EAAW8G,KAAK,cAAcC,MAAO,CAAC5C,MAAM,GAAD,OAAKuC,EAAL,MAAoBM,gBAAeN,EAAWO,gBAAc,IAAIC,gBAAc,YANxI3F,MAYjB,OACI,qBAAIvB,UAAU,8BAAd,UACI,oBAAIA,UAAU,iBAAd,wBACC2G,S,GArCyBvG,cCMrB+G,G,kNAEjBrE,WAAa,IAAIzC,E,EACjBd,MAAQ,CACJsC,QAAS,GACTgB,SAAS,EACT0B,OAAO,EACPxD,GAAI,M,uDAGR,WACIjB,KAAKsH,e,gCAGT,SAAmBnC,GACXnF,KAAKR,MAAM+H,YAAcpC,EAAUoC,WACnCvH,KAAKsH,e,wBAIb,WAAc,IAAD,OACFC,EAAavH,KAAKR,MAAlB+H,UAEFA,GAGLvH,KAAKgD,WAAWwE,WAAWD,GACtBjG,MAAK,SAAAS,GACF,EAAK9B,SAAS,CACV8B,UACAgB,SAAS,S,oBAKzB,WACI,IAAK/C,KAAKP,MAAMsC,QACZ,OAAO,sBAAM7B,UAAU,eAAhB,qCAFN,MAI6BF,KAAKP,MAAhCsC,EAJF,EAIEA,QAASgB,EAJX,EAIWA,QAAS0B,EAJpB,EAIoBA,MAEnBc,EAAed,EAAQ,cAAC,EAAD,IAAkB,KACzCe,EAAUzC,EAAU,cAAC,EAAD,IAAa,KACjCkD,EAAYlD,GAAW0B,EAAqC,KAA5B,cAAC,EAAD,CAAM1C,QAASA,IAErD,OACI,sBAAK7B,UAAU,OAAf,UACKqF,EACAC,EACAS,S,GAjDwB3F,cAuDnCmH,EAAO,SAAC,GAAe,IAAd1F,EAAa,EAAbA,QACJG,EAAkBH,EAAlBG,SAAUI,EAAQP,EAARO,KAEjB,OACI,qCACI,sBAAKpC,UAAU,SAAf,UACI,qBAAKkE,IAAKlC,EAAUoC,IAAKhC,IACzB,cAAC,EAAD,CAAiBP,QAASA,OAE9B,cAAC,EAAD,CAAca,MAAOb,EAAQa,YCxE1ByE,ICAAK,G,wDCQX,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IAMVC,MAAQ,CACJoC,eAAgB,EAChBnC,KAAM,GACNmE,OAAQ,OAVO,EAanByB,eAAiB,SAACrE,GACd,EAAKhB,SAAS,CACV4B,eAAgBZ,KAZpB,EAAKtB,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKuD,eAAiB,EAAKA,eAAevD,KAApB,gBAJP,E,kDAmBnB,SAAeF,GACXM,KAAKC,SAAS,CAACP,W,4BAGnB,SAAemE,GACX7D,KAAKC,SAAS,CAAC4D,a,oBAGnB,WAAU,IACCA,EAAU7D,KAAKP,MAAfoE,OAEP,OACI,sBAAK3D,UAAU,MAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAAC,EAAD,CACIP,eAAgBK,KAAKL,iBACzB,cAAC,EAAD,CAAmBkE,OAAQA,EAAQV,eAAgBnD,KAAKmD,oBAE5D,cAAC,EAAD,CAAaU,OAAQA,EAAQyB,eAAgBtF,KAAKsF,eAAgB5F,KAAMM,KAAKP,MAAMC,OACnF,cAAC,EAAD,CAAa6H,UAAWvH,KAAKP,MAAMoC,wB,GAvClBvB,c,MCHjCqH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8ad54a25.chunk.js","sourcesContent":["import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Search by pokemon\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n};","export default class PokService {\r\n    constructor() {\r\n        this._apiBase = 'https://pokeapi.co/api/v2';\r\n    }\r\n\r\n    async getResource(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n    \r\n        if(!res.ok){\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n    \r\n        return await res.json();\r\n    }\r\n\r\n    async getPokemon(id) {\r\n        const res = await this.getResource(`/pokemon/${id}`);\r\n        return this._transformPokemon(res);\r\n    }\r\n\r\n    async getAllPokemons() {\r\n        const data = [];\r\n        let allPokemons1 = []\r\n        await fetch('https://pokeapi.co/api/v2/pokemon?limit=1118')\r\n            .then(response => response.json())\r\n            .then(allPokemons => {\r\n                allPokemons1 = allPokemons;\r\n                \r\n            });\r\n        for (let i = 0; i < allPokemons1.results.length; i++) {\r\n            let currentPokemon = await this.fetchPokemonData(allPokemons1.results[i])\r\n            if (!!currentPokemon.id) {\r\n                data.push(currentPokemon);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    async fetchPokemonData(pokemon) {\r\n        let url = pokemon.url;\r\n        const res =  await fetch(url)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    return null;\r\n                }\r\n            });\r\n        return this._transformPokemon(res);\r\n    }\r\n\r\n    async getTypes() {\r\n        const data = [];\r\n        const res = await this.getResource('/type');\r\n        for (let i = 0; i < res.results.length; i++) {\r\n            let currentType = this._transformType(res.results[i]);\r\n            data.push(currentType);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    _transformPokemon(pokemon) {\r\n        if (pokemon === null) {\r\n            return {};\r\n        }\r\n        return {\r\n            id: pokemon.id,\r\n            imageSrc: pokemon.sprites.other['official-artwork'].front_default,\r\n            name: pokemon.name,\r\n            types: pokemon.types,\r\n            species: pokemon.species.name,\r\n            height: pokemon.height,\r\n            weight: pokemon.weight,\r\n            abilities: pokemon.abilities,\r\n            stats: pokemon.stats\r\n        }\r\n    }\r\n\r\n    _transformType(type) {\r\n        return {\r\n            name: type.name\r\n        }\r\n    }\r\n}","import PokemonTypeFilter from './pokemon-type-filter';\r\nexport default PokemonTypeFilter;","import React, { Component } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport PokService from '../../services/pokService';\r\n\r\nimport './pokemon-type-filter.css';\r\n\r\nexport default class PokemonTypeFilter extends Component {\r\n\r\n    state = {\r\n        buttons: [],\r\n        loading: true\r\n    }\r\n    pokService = new PokService();\r\n\r\n    onTypesLoaded = (types) => {\r\n        this.setState({\r\n            buttons: types,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.pokService.getTypes()\r\n                .then(this.onTypesLoaded)\r\n    }\r\n\r\n    render() {\r\n        let buttons = [];\r\n        const {onFilterSelect} = this.props;\r\n        if (this.state.buttons.length === 0) {\r\n            buttons.push(\r\n                <Dropdown.Item \r\n                    key=\"all\"\r\n                    onClick={() => onFilterSelect('all')}\r\n                    href=\"#\">All</Dropdown.Item>\r\n            );\r\n        } else {\r\n            buttons.push(\r\n                <Dropdown.Item \r\n                    key=\"all\"\r\n                    onClick={() => onFilterSelect('all')}\r\n                    href=\"#\">All</Dropdown.Item>\r\n            )\r\n            buttons = buttons.concat(this.state.buttons.map(name => {\r\n                let transformFilter = name.name[0].toUpperCase() + name.name.slice(1);\r\n                return (\r\n                    <Dropdown.Item \r\n                        key={name.name} \r\n                        onClick={() => onFilterSelect(name.name)}\r\n                        href=\"#\">{transformFilter}</Dropdown.Item>\r\n                )\r\n            }));\r\n        }\r\n        let transformFilter = this.props.filter[0].toUpperCase() + this.props.filter.slice(1);\r\n\r\n        return (\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    {transformFilter}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    {buttons}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        );\r\n    }\r\n};","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div className=\"loadingio-spinner-spin-9xizxls4vrd\">\r\n            <div className=\"ldio-gies4g58bn\">\r\n                <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import ErrorLoading from './error-loading';\r\nexport default ErrorLoading;","import React from 'react';\r\n\r\nconst ErrorLoading = () => {\r\n    return <span>Something goes wrong</span>\r\n}\r\n\r\nexport default ErrorLoading;","import PokemonListItem from './pokemon-list-item';\r\nexport default PokemonListItem;","import React, { Component } from 'react';\r\nimport './pokemon-list-item.css';\r\n\r\nexport default class PokemonListItem extends Component {\r\n    render() {\r\n        const {imageSrc, name} = this.props;\r\n        return (\r\n            <>\r\n                <img src={imageSrc} width=\"120px\" alt='pokemon'></img>\r\n                <h5>{name}</h5>\r\n            </>\r\n        );\r\n    }\r\n}","import PokemonList from './pokemon-list';\r\nexport default PokemonList;","import React, { Component } from 'react';\r\nimport PokService from '../../services/pokService';\r\nimport Spinner from '../spinner';\r\nimport ErrorLoading from '../error-loading';\r\nimport PokemonListItem from '../pokemon-list-item'\r\n\r\nimport './pokemon-list.css';\r\n\r\nexport default class PokemonList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClickNext = this.onClickNext.bind(this);\r\n        this.onClickPrev = this.onClickPrev.bind(this);\r\n    }\r\n\r\n    pokService = new PokService();\r\n    state = {\r\n        pokemons: [],\r\n        loading: true,\r\n        error: false,\r\n        minIndex: 0,\r\n        maxIndex: 9,\r\n        term: '',\r\n        filter: 'all'\r\n    }\r\n\r\n    onPokemonLoaded = (pokemons) => {\r\n        this.setState({\r\n            pokemons: pokemons,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.pokService.getAllPokemons()\r\n                .then(this.onPokemonLoaded)\r\n                .catch(this.onError);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.term !== prevProps.term) {\r\n            this.updateTerm();\r\n        }\r\n        if (this.props.filter !== prevProps.filter) {\r\n            this.updateFilter();\r\n        }\r\n    }\r\n\r\n    async updateTerm() {\r\n        const {term} = this.props;\r\n\r\n        if (!term) {\r\n            return;\r\n        }\r\n        await this.setState({\r\n            term,\r\n            minIndex: 0,\r\n            maxIndex: 9\r\n        })\r\n    }\r\n\r\n    async updateFilter() {\r\n        const {filter} = this.props;\r\n\r\n        if (!filter) {\r\n            return;\r\n        }\r\n        await this.setState({\r\n            filter,\r\n            minIndex: 0,\r\n            maxIndex: 9\r\n        })\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onClickNext() {\r\n        const {pokemons, maxIndex, minIndex} = this.state;\r\n        if (maxIndex >= pokemons.length) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            maxIndex: maxIndex + 10,\r\n            minIndex: minIndex + 10\r\n        });\r\n    };\r\n\r\n    onClickPrev() {\r\n        const {maxIndex, minIndex} = this.state;\r\n        if (minIndex === 0) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            maxIndex: maxIndex - 10,\r\n            minIndex: minIndex - 10\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {pokemons, loading, error, minIndex, maxIndex} = this.state;\r\n        const {onClickPokemon, filter, term} = this.props;\r\n        \r\n        const errorLoading = error ? <ErrorLoading/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n\r\n        let visiblePokemons = [];\r\n        if (pokemons.length !== 0) {\r\n            visiblePokemons = pokemons.filter(item => {\r\n                let isFilterType = false;\r\n                let isFilterSearch = false;\r\n                if (item.name.indexOf(term.toLowerCase()) > -1) {\r\n                    isFilterSearch = true;\r\n                }\r\n                item.types.forEach(type => {\r\n                    if (type.type.name === filter || filter === 'all') {\r\n                        isFilterType = true;\r\n                    }\r\n                })\r\n                return isFilterType && isFilterSearch;\r\n            }).slice(minIndex, maxIndex + 1).map((item) => {\r\n                const {id, ...pokemonProps} = item;\r\n                return (\r\n                    <li key={id} onClick={() => onClickPokemon(id)} className=\"list-group-item d-flex pokemon\">\r\n                        <PokemonListItem {...pokemonProps}/>\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n        const content = !(loading || error) ? visiblePokemons : null\r\n\r\n        return (\r\n            <div>\r\n                <ul className=\"list-group pokemonList\">\r\n                    {errorLoading}\r\n                    {spinner}\r\n                    {content}\r\n                </ul>\r\n                <div className=\"navigation d-flex justify-content-center\">\r\n                    <button type=\"button\" onClick={this.onClickPrev} className=\"btn btn-light navigation-prev\">Previous</button>\r\n                    <button type=\"button\" onClick={this.onClickNext} className=\"btn btn-light navigation-next\">Next</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import PokemonBaseInfo from './pokemon-info-base';\r\nexport default PokemonBaseInfo;","import React, { Component } from 'react';\r\nimport './pokemon-info-base.css';\r\n\r\nexport default class PokemonBaseInfo extends Component {\r\n\r\n    render() {\r\n        const {id, types, species, height, weight, abilities} = this.props.pokemon;\r\n        let transformSpecies = species[0].toUpperCase() + species.slice(1);\r\n\r\n        const components = abilities.map(item => {\r\n            if (!item.is_hidden) {\r\n                return(\r\n                    <li key={item.slot} className=\"list-group-item\">\r\n                        {item.slot}. {item.ability.name}\r\n                    </li>\r\n                );\r\n            } else {\r\n                return(\r\n                    <li key={item.slot} className=\"list-group-item\">\r\n                        {item.ability.name} (hidden)\r\n                    </li>\r\n                );\r\n            };\r\n        });\r\n\r\n        const currentTypes = types.map((item, i)=> {\r\n            return(\r\n                <button key={i} type=\"button\" className=\"btn btn-warning btn-sm\" disabled>\r\n                    {item.type.name.toUpperCase()}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"pokemonBaseInfo\">\r\n                <h3 className=\"pokemonBaseInfoTitle\">Pokedex data</h3>\r\n                <ul className=\"list-group list-group-flush pokemonInfo\">\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">National №</span>\r\n                        <span className=\"pokemonId\">{id}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Type</span>\r\n                        <span>{currentTypes}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Species</span>\r\n                        <span>{transformSpecies} Pokemon</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Height</span>\r\n                        <span>{height / 10} m</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Weight</span>\r\n                        <span>{weight / 10} kg</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Abilities</span>\r\n                        <ul className=\"list-group list-group-flush list-abilities\">{components}</ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n} ","import PokemonStats from './pokemon-stats';\r\nexport default PokemonStats;","import React, { Component } from 'react';\r\nimport './pokemon-stats.css';\r\n\r\nexport default class PokemonStats extends Component {\r\n    render() {\r\n        const {stats} = this.props;\r\n        let maxStat = stats[0].base_stat;\r\n        for (let i = 1; i < stats.length; i++) {\r\n            if (maxStat < stats[i].base_stat) {\r\n                maxStat = stats[i].base_stat;\r\n            }\r\n        }\r\n        \r\n\r\n        const pokemonStats = stats.map((item, i) => {\r\n            const {stat, base_stat} = item;\r\n            let transformStatName = stat.name[0].toUpperCase() + stat.name.slice(1);\r\n            let className = \"progress-bar\"\r\n            if (maxStat === base_stat) {\r\n                className += ' bg-success';\r\n            } else {\r\n                className += ' bg-warning';\r\n            }\r\n\r\n            return(\r\n                <li key={i} className=\"list-group-item d-flex justify-content-center\">\r\n                    <div className=\"stat\">\r\n                        <span className=\"statTerm\">{transformStatName}:</span>\r\n                        <span className=\"statNumber\">{base_stat}</span>\r\n                    </div>\r\n                    <div className=\"progress statProgress\">\r\n                        <div className={className} role=\"progressbar\" style={{width: `${base_stat}%`}} aria-valuenow={base_stat} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <ul className=\"list-group list-group-flush\">\r\n                <h3 className=\"baseStatsTitle\">Base stats</h3>\r\n                {pokemonStats}\r\n            </ul>\r\n        );\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport PokService from '../../services/pokService';\r\nimport PokemonBaseInfo from '../pokemon-info-base';\r\nimport PokemonStats from '../pokemon-stats';\r\nimport Spinner from '../spinner';\r\nimport ErrorLoading from '../error-loading';\r\n\r\nimport './pokemon-info.css';\r\n\r\nexport default class PokemonInfo extends Component {\r\n\r\n    pokService = new PokService();\r\n    state = {\r\n        pokemon: {},\r\n        loading: true,\r\n        error: false,\r\n        id: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateInfo();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.pokemonId !== prevProps.pokemonId) {\r\n            this.updateInfo();\r\n        }\r\n    }\r\n\r\n    updateInfo() {\r\n        const {pokemonId} = this.props;\r\n        // console.log(pokemonId);\r\n        if (!pokemonId) {\r\n            return;\r\n        }\r\n        this.pokService.getPokemon(pokemonId)\r\n            .then(pokemon => {\r\n                this.setState({\r\n                    pokemon,\r\n                    loading: false\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.pokemon) {\r\n            return <span className='select-error'>Please select a pokemon</span>\r\n        }\r\n        const {pokemon, loading, error} = this.state;\r\n\r\n        const errorLoading = error ? <ErrorLoading/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View pokemon={pokemon}/> : null\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                {errorLoading}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst View = ({pokemon}) => {\r\n    const {imageSrc, name} = pokemon;\r\n\r\n    return(\r\n        <>\r\n            <div className=\"d-flex\">\r\n                <img src={imageSrc} alt={name}></img>\r\n                <PokemonBaseInfo pokemon={pokemon}/> \r\n            </div>\r\n            <PokemonStats stats={pokemon.stats}/>\r\n        </>\r\n    )\r\n}","import PokemonInfo from './pokemon-info';\r\nexport default PokemonInfo;","import App from './app';\r\nexport default App;","import React, { Component } from 'react';\r\nimport SearchPanel from '../search-panel';\r\nimport PokemonTypeFilter from '../pokemon-type-filter';\r\nimport PokemonList from '../pokemon-list';\r\nimport PokemonInfo from '../pokemon-info';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n    }\r\n\r\n    state = {\r\n        currentPokemon: 1,\r\n        term: '',\r\n        filter: 'all'\r\n    }\r\n\r\n    onClickPokemon = (id) => {\r\n        this.setState({\r\n            currentPokemon: id\r\n        })\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term});\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter});\r\n    }\r\n\r\n    render() {\r\n        const {filter} = this.state;\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel \r\n                        onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PokemonTypeFilter filter={filter} onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PokemonList filter={filter} onClickPokemon={this.onClickPokemon} term={this.state.term}/>\r\n                <PokemonInfo pokemonId={this.state.currentPokemon} />\r\n            </div>\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app'\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}